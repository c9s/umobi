// Generated by CoffeeScript 1.4.0
(function() {

  define(["cs!umobi.core", "cs!u", "cs!umobi.scroller", "cs!umobi.support"], function() {
    u('body').css('overflow', 'hidden').addClass('ui-overlay-c');
    umobi.page = {
      findAll: function() {
        return u('[data-role="page"],page');
      },
      findActive: function() {
        return u('.ui-page-active');
      },
      init: function() {
        var indexPage, pages,
          _this = this;
        $(document).trigger('pageinit');
        pages = this.findAll();
        if (!pages.get(0))  
          pages = u($("body").wrapInner("<div data-role=\"page\"></div>").children(0).get(0));
        pages.each(function(i, e) {
          return _this.create(e);
        });
        if (location.hash) {
          return this.revealByHash(location.hash); 
        } else {
          indexPage = u('#index');
          if (indexPage.get(0)) {
            return this.reveal(indexPage); 
          } else {
            return this.reveal(pages.first());
          }
        }
      },
      reveal: function(p) {
        this.findActive().removeClass("ui-page-active");
        p.addClass("ui-page-active").trigger("pagereveal");
        return $(document).trigger("pagereveal", [p]);
      },
      revealByHash: function(hash) {
        var upage;
        upage = u(hash);
        if (!upage.get(0))  
          upage = u('[data-role="page"]').first();
        return umobi.page.reveal(upage);
      },
      create: function(el) {
        var $c, $contentContainer, AdjustContentHeight, AdjustContentPadding, c, f, h, isBothFixed, resizeTimeout, upage;
        upage = u(el).addClass(["ui-page", "ui-body-" + umobi.config.theme]);
        upage.trigger("pagecreate");
        h = upage.find('[data-role="header"],header').addClass("ui-header");
        f = upage.find('[data-role="footer"],footer').addClass("ui-footer");
        c = upage.find('[data-role="content"]').addClass("ui-content");
        h.find("h1,h2,h3,h4,h5,h6").addClass("ui-title");
        isBothFixed = h.data("fixed" || f.data("fixed"));
        if (isBothFixed) {
          $c = c.jQuery();
          $c.wrap('<div class="ui-content-container"/>');
          $contentContainer = $c.parent();
          if (umobi.support.touch && umobi.config.touchScroll) {
            umobi.scroller.create(c.get(0));
            document.documentElement.style.overflow = "hidden";
            $contentContainer.addClass("ui-content-scroll"); 
          }
          if (!umobi.config.touchScroll) {
            AdjustContentPadding = function() {
              $contentContainer.css({
                "position": "absolute",
                "-webkit-overflow-scrolling": "touch",
                "overflow": "auto"
              });
              if (h.get(0))  
                $contentContainer.css("top", h.height() + "px");
              if (f.get(0))  
                return $contentContainer.css("bottom", f.height() + "px");
            };
            upage.on("pagereveal", AdjustContentPadding); 
          } else {
            AdjustContentHeight = function(e) {
              var contentBottom, contentHeight, contentTop;
              contentHeight = $(window).height();
              contentTop = h.get(0) ? h.height() : 0;
              contentBottom = f.get(0) ? f.height() : 0;
              return $contentContainer.css({
                position: "absolute",
                top: contentTop + "px",
                left: 0,
                bottom: contentBottom + "px",
                overflow: umobi.support.touch ? "hidden" : "auto"
              });
            };
            upage.on("pagereveal", AdjustContentHeight);
          } 
        }
        resizeTimeout = null;
        u(window).on("resize", function() {
          if (resizeTimeout)  
            clearTimeout(resizeTimeout);
          return resizeTimeout = setTimeout(AdjustContentHeight, 100);
        });
        if (h.attr("data-fixed"))  
          h.addClass("ui-fixed-header");
        if (f.attr("data-fixed"))  
          return f.addClass("ui-fixed-footer");
      }
    };
  });

}).call(this);
