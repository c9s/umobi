// Generated by CoffeeScript 1.4.0
(function() {

  define(['jquery', 'cs!u.dom', 'cs!u', 'cs!umobi.core'], function() {
    umobi.button = {};
    umobi.button.all = function() {
      return u.dom.queryAll('[data-role="button"]');
    };
    umobi.button.markup = function(el) {
      var $el;
      $el = $(el);
      return $el.wrapInner("<span class=\"ui-btn ui-btn-corner-all\">\n  <span class=\"ui-btn-text\">\n  </span>\n</span>");
    };
    umobi.button.bindClassEvents = function(el) {
      var $el, cmap, theme;
      $el = $(el);
      theme = umobi.config.theme;
      cmap = {
        up: "ui-btn-up-" + theme,
        down: "ui-btn-down-" + theme,
        hover: "ui-btn-hover-" + theme
      };
      $el.addClass(cmap.up);
      $el.hover((function() {
        return u(this).removeClass([cmap.up, cmap.down]).addClass(cmap.hover);
      }), (function() {
        return u(this).removeClass([cmap.down, cmap.hover]).addClass(cmap.up);
      }));
      $el.on("tap", function(e) {
        return u(this).removeClass(cmap.hover).removeClass(cmap.up).addClass(cmap.down);
      });
      $el.on("mousedown", function(e) {
        return u(this).removeClass(cmap.hover).removeClass(cmap.up).addClass(cmap.down);
      });
      return $el.on('mouseup', function(e) {
        return u(this).removeClass(cmap.down).addClass(cmap.hover);
      });
    };
    u.ready(function() {
      var $icon, $link, b, btn, buttons, el, iconpos, icontype, link, linkbuttons, _i, _j, _len, _len1, _ref, _ref1, _results;
      linkbuttons = u('a[data-role="button"]');
      _ref = linkbuttons.all();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        el = _ref[_i];
        link = u(el);
        link.data("corners", true).data("shadow", true).data("theme", umobi.config.theme);
        link.addClass(["ui-btn", "ui-shadow", "ui-btn-corner-all"]);
        if (link.data("mini"))  
          link.addClass("ui-mini");
        if (link.data("inline"))  
          link.addClass("ui-inline");
        $link = $(el);
        $link.wrapInner("<span class=\"ui-btn-text\">\n</span>");
        $link.wrapInner("<span class=\"ui-btn-inner\">\n</span>");
        if (icontype = $link.data("icon")) {
          iconpos = $link.data("iconpos");
          if (iconpos == null)  
            iconpos = "left";
          $icon = $('<span/>');
          $icon.addClass("ui-icon icon-" + icontype);
          $icon.addClass("ui-icon-" + iconpos);
          $link.addClass("ui-btn-icon-" + iconpos);
          $link.children(0).prepend($icon); 
        }
        umobi.button.bindClassEvents($link);
      }
      buttons = u('button, input[type="button"]');
      _ref1 = buttons.all();
      _results = [];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        btn = _ref1[_j];
        b = u(btn);
        b.addClass(["ui-btn", "ui-btn-corner-all", "ui-shadow"]);
        if (b.data("mini"))  
          b.addClass("ui-mini");
        if (b.data("inline"))  
          b.addClass("ui-inline");
        $(btn).wrapInner("<span class=\"ui-btn-text\">\n</span>");
        $(btn).wrapInner("<span class=\"ui-btn-inner\">\n</span>");
        if (icontype = b.data("icon")) {
          iconpos = b.data("iconpos");
          if (iconpos == null)  
            iconpos = "left";
          $icon = $('<span/>');
          $icon.addClass("ui-icon icon-" + icontype);
          $icon.addClass("ui-icon-" + iconpos);
          b.addClass("ui-btn-icon-" + iconpos);
          $(btn).children(0).prepend($icon); 
        }
        _results.push(umobi.button.bindClassEvents($(btn)));
      }
      return _results;
    });
  });

}).call(this);
